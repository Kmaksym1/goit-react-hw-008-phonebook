{"version":3,"file":"static/js/838.0a37b0d8.chunk.js","mappings":"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","sources":["reduxe/contacts/selectors.js","../node_modules/clsx/dist/clsx.m.js","../node_modules/@chakra-ui/layout/src/stack/h-stack.tsx","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/contactList.module.css?ddc0","../node_modules/@chakra-ui/layout/src/list.tsx","../node_modules/@chakra-ui/icons/src/Delete.tsx","components/ContactList/ContactList.jsx","../node_modules/@chakra-ui/icons/src/Search.tsx","components/Filter/Filter.jsx","Pages/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filters;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { forwardRef } from \"@chakra-ui/system\"\n\nimport { Stack, StackProps } from \"./stack\"\n\n/**\n * A view that arranges its children in a horizontal line.\n *\n * @see Docs https://chakra-ui.com/docs/components/stack\n */\nexport const HStack = forwardRef<StackProps, \"div\">((props, ref) => (\n  <Stack align=\"center\" {...props} direction=\"row\" ref={ref} />\n))\n\nHStack.displayName = \"HStack\"\n","import { Formik, Form, Field } from 'formik';\n// import * as yup from 'yup';\n// import css from \"../ContactForm/contactForm.module.css\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'reduxe/contacts/operations';\nimport { selectContacts } from 'reduxe/contacts/selectors';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  Button,\n  FormControl,\n  FormErrorMessage,\n  HStack,\n  Input,\n  Text,\n  VStack,\n} from '@chakra-ui/react';\n\n// const schema = yup.object().shape({\n//   name: yup.string().required(),\n//   phone: yup.string().min(7).max(12).required(),\n// });\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log(\"values of Add Contact\", values)\n\n    const existingContact = contacts.find(\n      contact => contact.name === values.name\n    );\n    if (existingContact) {\n      return toast(`${values.name} is already in contacts.`);\n    }\n\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <>\n      <ToastContainer />\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        // validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        {({ handleSubmit, errors, touched }) => (\n          <Form\n            onSubmit={handleSubmit}\n          >\n            <VStack>\n              <HStack>\n                <Text fontSize=\"xl\">Name</Text>\n                <FormControl isInvalid={!!errors.name && touched.name}>\n                  <Field\n                    as={Input}\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"name\"\n                    fontSize=\"xl\"\n                    placeholder=\"Contact name\"\n                    variant=\"filled\"\n                    \n                    validate={value => {\n                      if (value.length < 2) {\n                        return 'Name should be over 2 characters.';\n                      }\n                    }}\n                  />\n                  <FormErrorMessage>{errors.name}</FormErrorMessage>\n                </FormControl>\n              </HStack>\n              <HStack>\n                <Text fontSize=\"xl\">Phone</Text>\n                <FormControl isInvalid={!!errors.number && touched.number}>\n                  <Field\n                    as={Input}\n                    id=\"number\"\n                    name=\"number\"\n                    type=\"number\"\n                    fontSize=\"xl\"\n                    placeholder=\"Phone number\"\n                    variant=\"filled\"\n\n                    validate={value => {\n                      if ((value.length < 9) &&(value.length<12) ) {\n                        return 'Phone should be from 9 to 12 characters.';\n                      }\n                    }}\n                  />\n                  <FormErrorMessage>{errors.number}</FormErrorMessage>\n                </FormControl>\n              </HStack>\n              <Button ml={-4} mt={4} colorscheme=\"teal\" type=\"submit\">\n                Add Contact\n              </Button>\n            </VStack>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"loading\":\"contactList_loading__6qDVv\",\"contactsContainer\":\"contactList_contactsContainer__exPNI\",\"findCOntacts\":\"contactList_findCOntacts__zhplp\",\"inputFindContacts\":\"contactList_inputFindContacts__aDFhi\",\"ulContainer\":\"contactList_ulContainer__NC9yF\",\"liContainer\":\"contactList_liContainer__1N+bF\",\"delBtn\":\"contactList_delBtn__g25hb\"};","import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport type {\n  HTMLChakraProps,\n  SystemProps,\n  ThemingProps,\n} from \"@chakra-ui/system\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\n\nconst [ListStylesProvider, useListStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `,\n})\n\nexport { useListStyles }\n\ninterface ListOptions {\n  /**\n   * Shorthand prop for `listStyleType`\n   * @type SystemProps[\"listStyleType\"]\n   */\n  styleType?: SystemProps[\"listStyleType\"]\n  /**\n   * Shorthand prop for `listStylePosition`\n   * @type SystemProps[\"listStylePosition\"]\n   */\n  stylePosition?: SystemProps[\"listStylePosition\"]\n  /**\n   * The space between each list item\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n}\n\nexport interface ListProps\n  extends HTMLChakraProps<\"ul\">,\n    ThemingProps<\"List\">,\n    ListOptions {}\n\n/**\n * List is used to display list items, it renders a `<ul>` by default.\n *\n * @see Docs https://chakra-ui.com/list\n */\nexport const List = forwardRef<ListProps, \"ul\">(function List(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props)\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props)\n\n  const validChildren = getValidChildren(children)\n\n  const selector = \"& > *:not(style) ~ *:not(style)\"\n\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {}\n\n  return (\n    <ListStylesProvider value={styles}>\n      <chakra.ul\n        ref={ref}\n        listStyleType={styleType}\n        listStylePosition={stylePosition}\n        /**\n         * We added this role to fix the Safari accessibility issue with list-style-type: none\n         * @see https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n         */\n        role=\"list\"\n        __css={{ ...styles.container, ...spacingStyle }}\n        {...rest}\n      >\n        {validChildren}\n      </chakra.ul>\n    </ListStylesProvider>\n  )\n})\n\nList.displayName = \"List\"\n\nexport const OrderedList = forwardRef<ListProps, \"ol\">((props, ref) => {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ol\" styleType=\"decimal\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nOrderedList.displayName = \"OrderedList\"\n\nexport const UnorderedList = forwardRef<ListProps, \"ul\">(function UnorderedList(\n  props,\n  ref,\n) {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ul\" styleType=\"initial\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nUnorderedList.displayName = \"UnorderedList\"\n\nexport interface ListItemProps extends HTMLChakraProps<\"li\"> {}\n\n/**\n * ListItem\n *\n * Used to render a list item\n */\nexport const ListItem = forwardRef<ListItemProps, \"li\">(function ListItem(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <chakra.li ref={ref} {...props} __css={styles.item} />\n})\n\nListItem.displayName = \"ListItem\"\n\n/**\n * ListIcon\n *\n * Used to render an icon beside the list item text\n */\nexport const ListIcon = forwardRef<IconProps, \"svg\">(function ListIcon(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <Icon ref={ref} role=\"presentation\" {...props} __css={styles.icon} />\n})\n\nListIcon.displayName = \"ListIcon\"\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const DeleteIcon = createIcon({\n  displayName: \"DeleteIcon\",\n  path: (\n    <g fill=\"currentColor\">\n      <path d=\"M19.452 7.5H4.547a.5.5 0 00-.5.545l1.287 14.136A2 2 0 007.326 24h9.347a2 2 0 001.992-1.819L19.95 8.045a.5.5 0 00-.129-.382.5.5 0 00-.369-.163zm-9.2 13a.75.75 0 01-1.5 0v-9a.75.75 0 011.5 0zm5 0a.75.75 0 01-1.5 0v-9a.75.75 0 011.5 0zM22 4h-4.75a.25.25 0 01-.25-.25V2.5A2.5 2.5 0 0014.5 0h-5A2.5 2.5 0 007 2.5v1.25a.25.25 0 01-.25.25H2a1 1 0 000 2h20a1 1 0 000-2zM9 3.75V2.5a.5.5 0 01.5-.5h5a.5.5 0 01.5.5v1.25a.25.25 0 01-.25.25h-5.5A.25.25 0 019 3.75z\" />\n    </g>\n  ),\n})\n","import css from \"./contactList.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteContact } from \"reduxe/contacts/operations\";\n// import { useEffect } from \"react\";\nimport { selectContacts, selectError, selectFilter, selectIsLoading } from \"reduxe/contacts/selectors\";\nimport { Loader } from \"../Loader/Loader\";\nimport { useState } from \"react\";\nimport { Button, Flex, List, ListItem, useColorModeValue } from \"@chakra-ui/react\";\nimport { DeleteIcon } from \"@chakra-ui/icons\";\n\n\nconst ContactList = () => {\n  const [toDelete, setToDelete] = useState(null)\n  const contacts = useSelector(selectContacts);\n  const filters = useSelector(selectFilter);\n  const loading = useSelector(selectIsLoading)\n  const error = useSelector(selectError);\n  \n  const dispatch = useDispatch();\n  // useEffect(() => {\n  // console.log(\"contList\")\n  //   dispatch(fetchAllContacts());\n  // }, [dispatch]);\n\n  const filteredContacts = () => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filters.toLowerCase())\n    );\n  };\n  const visibleContacts = filteredContacts();\n  const iconColorMode = useColorModeValue('gray.600', 'gray.200')\n\n  return (<Flex justifyContent={\"space-around\"} width=\"100%\">\n    {loading && <Loader color=\"#4fa94d\" className={css.loading} />}\n    {error && <h4>Something went wrong, try again later</h4>}\n    {contacts.length > 0 ? (\n      \n      <List spacing={1} mt={10} width=\"100%\" >\n        {visibleContacts.map(({ name, id, number }) => {\n          return (\n            <ListItem key={id} borderBottom=\"1px\" \n            borderColor=\"gray.400\" display=\"flex\"\n            justifyContent=\"space-between\"\n              align-items=\"center\"\n            \n    paddingLeft= \"6px\"\n    >\n              {name}: {number}\n              <Button\n                type=\"button\"\n                _hover={{\n                  textDecoration: \"none\"\n                }}\n                style={{\n                  background: \"transparent\",\n                  border: \"none\",\n                  boxShadow: \"none\",\n                  padding: \"0\",\n                  margin:\"0\"\n                }}\n                className={css.delBtn}\n                onClick={\n                  () => {\n                    setToDelete(id)\n                    dispatch(deleteContact(id)).then(() => {\n                      setToDelete(null);\n                    })\n                  }}\n              >\n                {id && toDelete === id ? (\n                  <Loader color=\"red\" height=\"25\" width=\"25\" />\n                ) : (\n                  <DeleteIcon boxSize={5} color={iconColorMode}/>\n                )}\n              </Button>\n            </ListItem>);\n           })}\n      </List>\n      \n    )\n    \n    \n    : (<h4>No contacts</h4>)}\n  \n  </Flex>)\n};\n\nexport default ContactList;\n\n/* <div className=\"contactsContainer\">\n        <ul className={css.ulContainer}>\n          {visibleContacts.map(({ name, id, number }) => {\n            return (\n              <li key={id} className={css.liContainer}>\n                {name}: {number}\n                <button\n                  type=\"button\"\n                  className={css.delBtn}\n                  onClick={\n                    () => {\n                      setToDelete(id)\n                      dispatch(deleteContact(id)).then(() => {\n                        setToDelete(null);\n                      })\n                    }}\n                    >\n                  {id && toDelete === id ? (\n                  <Loader color=\"red\" height= \"30\" width= \"30\" />\n                ) : (\n                  'Delete'\n                )}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>) : (<h4>No contacts</h4>)} */","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const SearchIcon = createIcon({\n  d: \"M23.384,21.619,16.855,15.09a9.284,9.284,0,1,0-1.768,1.768l6.529,6.529a1.266,1.266,0,0,0,1.768,0A1.251,1.251,0,0,0,23.384,21.619ZM2.75,9.5a6.75,6.75,0,1,1,6.75,6.75A6.758,6.758,0,0,1,2.75,9.5Z\",\n  displayName: \"SearchIcon\",\n})\n","// import css from \"./filter.module.css\";\nimport { useState } from 'react';\nimport { filter } from 'reduxe/contacts/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport { VStack, Input, InputGroup, InputLeftElement } from '@chakra-ui/react';\nimport { SearchIcon } from '@chakra-ui/icons';\n\n\nconst Filter = () => {\n  const [query, setQuery] = useState('');\n\n  const dispatch = useDispatch();\n\n  const onChange = ({ target }) => {\n    const query = target.value;\n    setQuery(query);\n    dispatch(filter(query));\n  };\n\n  return (\n    <VStack mt={10}>\n      <InputGroup>\n        <InputLeftElement pointerEvents=\"none\">\n          <SearchIcon color=\"gray.300\" />\n        </InputLeftElement>\n        <Input\n          value={query}\n          type=\"tel\"\n          placeholder=\"Find contacts by name\"\n          onChange={onChange}\n          fontSize=\"xl\"\n        />\n      </InputGroup>\n    </VStack>\n  );\n};\nexport default Filter;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchAllContacts } from 'reduxe/contacts/operations';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Box, Flex } from '@chakra-ui/react';\n\n\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n  return (\n    <Flex align=\"center\" justify=\"center\" mt={30}>\n      <Box boxshadow=\"xl\" colorscheme=\"teal\" p={6} rounded=\"md\" w=\"530px\" fontSize=\"xl\" boxShadow=\"dark-lg\">\n        <ContactForm />\n        <Filter />\n        <ContactList />\n      </Box>\n    </Flex>\n  );\n};\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filters","selectIsLoading","isLoading","selectError","error","r","e","t","f","n","Array","isArray","length","arguments","HStack","forwardRef","props","ref","jsx","Stack","_objectSpread","align","direction","displayName","useSelector","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","ToastContainer","Formik","initialValues","name","number","onSubmit","values","_ref","resetForm","console","log","find","contact","toast","concat","addContact","_ref2","handleSubmit","errors","touched","Form","VStack","Text","fontSize","FormControl","isInvalid","Field","as","Input","id","type","placeholder","variant","validate","value","FormErrorMessage","Button","ml","mt","colorscheme","_createContext","createContext","errorMessage","_createContext2","_slicedToArray","ListStylesProvider","useListStyles","List","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","_omitThemingProps$sty","styleType","stylePosition","spacing","rest","_objectWithoutProperties","_excluded","validChildren","getValidChildren","spacingStyle","_defineProperty","chakra","listStyleType","listStylePosition","role","__css","container","_excluded2","marginStart","_excluded3","ListItem","item","Icon","icon","DeleteIcon","createIcon","path","fill","d","_useState","useState","_useState2","toDelete","setToDelete","loading","visibleContacts","filter","toLowerCase","includes","iconColorMode","useColorModeValue","Flex","justifyContent","width","Loader","color","className","css","map","borderBottom","borderColor","display","paddingLeft","_hover","textDecoration","style","background","border","boxShadow","padding","margin","onClick","deleteContact","then","height","boxSize","SearchIcon","query","setQuery","InputGroup","InputLeftElement","pointerEvents","onChange","target","useEffect","fetchAllContacts","justify","Box","boxshadow","p","rounded","w","ContactForm","Filter","ContactList"],"sourceRoot":""}